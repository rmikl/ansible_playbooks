- name: Get latest nagios-core version
  shell: curl -s https://www.nagios.org/projects/nagios-core/history/4x/ | grep -i fixes -B 1  | grep "<h2>" | awk -F"&" '{print $1}' | awk -F">" '{print $2}'  | head -n1 | tr -d ' '
  register: nagios_core_version
  ignore_errors: true

- name: Get latest package of nagios plugin
  shell: curl -s https://www.nagios.org/downloads/nagios-plugins/ | grep "Latest" | awk -F"<*>" '{print $3}' | awk -F"<" '{print $1}' |  awk -F".tar.gz" '{print $1}' | tr -d ' '
  register: nagios_plugins_package
  ignore_errors: true

- name: Set facts to download nagios_core and nagios_plugins  
  set_fact:
    nagios_plugins={{ nagios_plugins_package.stdout | trim }}
    nagios_core={{ nagios_core_version.stdout | trim }}

- name: import yum repos ditionary
  include_vars : nagios_version.yml

- name: Create needed groups
  group:
    name: "{{ item }}"
    state: present
  loop: 
    - nagcmd
    - nagios
    
- name: Create nagios User
  user:
    name: nagios
    groups: "{{ item }}"
    state: present
  loop: 
    - nagcmd
    - nagios

- name: Create nagiosadmin User
  user:
    name: nagiosadmin
    groups: "{{ item }}"
    state: present
  loop: 
    - nagcmd
    - nagios
  

- name: Add apache to nagcmd group
  user:
    name: apache
    group: nagcmd
    state: present 

- name: Install Required Dependencies
  dnf:
    state: present
    name: "{{ item }}"
  loop:
    - httpd
    - httpd-tools
    - php
    - gcc
    - glibc-common
    - gd
    - gd-devel
    - make
    - net-snmp
    - unzip
    - tar

- name: Unpack nagios core and plugins latest version
  unarchive:
    remote_src: yes
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop: "{{ nagios_packages }}"

- name: Prepare nagios makefile 
  shell: cd ./nagios-{{ nagios_core | trim }}; ./configure --with-command-group=nagcmd

- name: Compile nagios installator
  make:
    chdir: ./nagios-{{ nagios_core | trim }}
    target: "{{ item }}"
  become: yes
  loop:
    - all
    - install
    - install-init
    - install-daemoninit
    - install-config
    - install-commandmode
    - install-exfoliation
    - install-webconf

- name: include nagios password
  include_vars: nagios_password.yml   
 
- name: Setup apache authentication for user nagiosadmin
  htpasswd:
    path: /usr/local/nagios/etc/htpasswd.users
    name: nagiosadmin
    password: "{{ password }}"
    create: yes