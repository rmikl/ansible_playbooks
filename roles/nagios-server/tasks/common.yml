- name: Get latest nagios-core version
  shell: curl -s https://www.nagios.org/projects/nagios-core/history/4x/ | grep -i fixes -B 1  | grep "<h2>" | awk -F"&" '{print $1}' | awk -F">" '{print $2}'  | head -n1 | tr -d ' '
  register: nagios_core_version
  ignore_errors: true
 
- name: Get latest package of nagios plugin
  shell: curl -s https://www.nagios.org/downloads/nagios-plugins/ | grep "Latest" | awk -F"<*>" '{print $3}' | awk -F"<" '{print $1}' |  awk -F".tar.gz" '{print $1}' | tr -d ' '
  register: nagios_plugins_package
  ignore_errors: true
  
- name: Set facts to download nagios_core and nagios_plugins  
  set_fact:
    nagios_plugins={{ nagios_plugins_package.stdout | trim }}
    nagios_core={{ nagios_core_version.stdout | trim }}
      
- name: Add groups needed for nagios
  group:
    name: "{{ item }}"
    state: present
  loop:
    - nagios
    - nagcmd
  when: ansible_pkg_mgr != 'apk'

- name: Add users needed for nagios common
  user:
    name: "{{ item }}"
    groups: nagios, nagcmd
    state: present 
  loop: 
    - nagios
    - nagcmd
    - apache
  when: ansible_pkg_mgr != 'apk'

- name: import repos ditionary
  include_vars : nagios_version.yml

- name: Unpack nagios core and plugins latest version
  unarchive:
    remote_src: yes
    src: "{{ item.src }}"
    dest: /root/
    validate_certs: no
  loop: "{{ nagios_packages }}"
  when: ansible_pkg_mgr != "apk" or 'lugin' not in item.src 
 
- name: Prepare nagios core makefile 
  shell: cd ./nagios-{{ nagios_core | trim }}; ./configure --with-command-group=nagcmd

- name: Compile nagios core installator
  make:
    chdir: ./nagios-{{ nagios_core | trim }}
    target: "{{ item }}"
  become: yes
  loop:
    - all
    - install
    - install-init
    - install-daemoninit
    - install-config
    - install-commandmode
    - install-exfoliation
    - install-webconf
  
- name: include nagios password
  include_vars: nagios_password.yml   

- name: Setup apache authentication for user nagiosadmin
  htpasswd:
    path: /usr/local/nagios/etc/htpasswd.users
    name: nagiosadmin
    password: "{{ password }}"
    create: yes

- name: Prepare nagios plugins makefile 
  shell: cd ./{{ nagios_plugins_package.stdout | trim }}; ./configure --with-nagios-user=nagios --with-nagios-group=nagios
  when: ansible_pkg_mgr != "apk"  

- name: Compile nagios plugins installator
  make:
    chdir: ./{{ nagios_plugins_package.stdout | trim }}
    target: "{{ item }}"
  become: yes
  loop:
    - all
    - install
  when: ansible_pkg_mgr != "apk"